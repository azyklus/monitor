(function() {var implementors = {};
implementors["chrono"] = [{"text":"impl <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/ops/arith/trait.SubAssign.html\" title=\"trait core::ops::arith::SubAssign\">SubAssign</a>&lt;<a class=\"struct\" href=\"chrono/struct.Duration.html\" title=\"struct chrono::Duration\">Duration</a>&gt; for <a class=\"struct\" href=\"chrono/naive/struct.NaiveDate.html\" title=\"struct chrono::naive::NaiveDate\">NaiveDate</a>","synthetic":false,"types":["chrono::naive::date::NaiveDate"]},{"text":"impl <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/ops/arith/trait.SubAssign.html\" title=\"trait core::ops::arith::SubAssign\">SubAssign</a>&lt;<a class=\"struct\" href=\"chrono/struct.Duration.html\" title=\"struct chrono::Duration\">Duration</a>&gt; for <a class=\"struct\" href=\"chrono/naive/struct.NaiveDateTime.html\" title=\"struct chrono::naive::NaiveDateTime\">NaiveDateTime</a>","synthetic":false,"types":["chrono::naive::datetime::NaiveDateTime"]},{"text":"impl <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/ops/arith/trait.SubAssign.html\" title=\"trait core::ops::arith::SubAssign\">SubAssign</a>&lt;<a class=\"struct\" href=\"chrono/struct.Duration.html\" title=\"struct chrono::Duration\">Duration</a>&gt; for <a class=\"struct\" href=\"chrono/naive/struct.NaiveTime.html\" title=\"struct chrono::naive::NaiveTime\">NaiveTime</a>","synthetic":false,"types":["chrono::naive::time::NaiveTime"]}];
implementors["serenity"] = [{"text":"impl <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/ops/arith/trait.SubAssign.html\" title=\"trait core::ops::arith::SubAssign\">SubAssign</a>&lt;<a class=\"struct\" href=\"serenity/model/channel/struct.MessageFlags.html\" title=\"struct serenity::model::channel::MessageFlags\">MessageFlags</a>&gt; for <a class=\"struct\" href=\"serenity/model/channel/struct.MessageFlags.html\" title=\"struct serenity::model::channel::MessageFlags\">MessageFlags</a>","synthetic":false,"types":["serenity::model::channel::message::MessageFlags"]},{"text":"impl <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/ops/arith/trait.SubAssign.html\" title=\"trait core::ops::arith::SubAssign\">SubAssign</a>&lt;<a class=\"struct\" href=\"serenity/model/gateway/struct.ActivityFlags.html\" title=\"struct serenity::model::gateway::ActivityFlags\">ActivityFlags</a>&gt; for <a class=\"struct\" href=\"serenity/model/gateway/struct.ActivityFlags.html\" title=\"struct serenity::model::gateway::ActivityFlags\">ActivityFlags</a>","synthetic":false,"types":["serenity::model::gateway::ActivityFlags"]},{"text":"impl <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/ops/arith/trait.SubAssign.html\" title=\"trait core::ops::arith::SubAssign\">SubAssign</a>&lt;<a class=\"struct\" href=\"serenity/model/guild/struct.ThreadMemberFlags.html\" title=\"struct serenity::model::guild::ThreadMemberFlags\">ThreadMemberFlags</a>&gt; for <a class=\"struct\" href=\"serenity/model/guild/struct.ThreadMemberFlags.html\" title=\"struct serenity::model::guild::ThreadMemberFlags\">ThreadMemberFlags</a>","synthetic":false,"types":["serenity::model::guild::member::ThreadMemberFlags"]},{"text":"impl <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/ops/arith/trait.SubAssign.html\" title=\"trait core::ops::arith::SubAssign\">SubAssign</a>&lt;<a class=\"struct\" href=\"serenity/model/guild/struct.SystemChannelFlags.html\" title=\"struct serenity::model::guild::SystemChannelFlags\">SystemChannelFlags</a>&gt; for <a class=\"struct\" href=\"serenity/model/guild/struct.SystemChannelFlags.html\" title=\"struct serenity::model::guild::SystemChannelFlags\">SystemChannelFlags</a>","synthetic":false,"types":["serenity::model::guild::system_channel::SystemChannelFlags"]},{"text":"impl <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/ops/arith/trait.SubAssign.html\" title=\"trait core::ops::arith::SubAssign\">SubAssign</a>&lt;<a class=\"struct\" href=\"serenity/model/permissions/struct.Permissions.html\" title=\"struct serenity::model::permissions::Permissions\">Permissions</a>&gt; for <a class=\"struct\" href=\"serenity/model/permissions/struct.Permissions.html\" title=\"struct serenity::model::permissions::Permissions\">Permissions</a>","synthetic":false,"types":["serenity::model::permissions::Permissions"]},{"text":"impl <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/ops/arith/trait.SubAssign.html\" title=\"trait core::ops::arith::SubAssign\">SubAssign</a>&lt;<a class=\"struct\" href=\"serenity/model/user/struct.UserPublicFlags.html\" title=\"struct serenity::model::user::UserPublicFlags\">UserPublicFlags</a>&gt; for <a class=\"struct\" href=\"serenity/model/user/struct.UserPublicFlags.html\" title=\"struct serenity::model::user::UserPublicFlags\">UserPublicFlags</a>","synthetic":false,"types":["serenity::model::user::UserPublicFlags"]},{"text":"impl <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/ops/arith/trait.SubAssign.html\" title=\"trait core::ops::arith::SubAssign\">SubAssign</a>&lt;<a class=\"struct\" href=\"serenity/client/bridge/gateway/struct.GatewayIntents.html\" title=\"struct serenity::client::bridge::gateway::GatewayIntents\">GatewayIntents</a>&gt; for <a class=\"struct\" href=\"serenity/client/bridge/gateway/struct.GatewayIntents.html\" title=\"struct serenity::client::bridge::gateway::GatewayIntents\">GatewayIntents</a>","synthetic":false,"types":["serenity::client::bridge::gateway::intents::GatewayIntents"]}];
implementors["tokio"] = [{"text":"impl <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/ops/arith/trait.SubAssign.html\" title=\"trait core::ops::arith::SubAssign\">SubAssign</a>&lt;<a class=\"struct\" href=\"https://doc.rust-lang.org/nightly/core/time/struct.Duration.html\" title=\"struct core::time::Duration\">Duration</a>&gt; for <a class=\"struct\" href=\"tokio/time/struct.Instant.html\" title=\"struct tokio::time::Instant\">Instant</a>","synthetic":false,"types":["tokio::time::instant::Instant"]}];
if (window.register_implementors) {window.register_implementors(implementors);} else {window.pending_implementors = implementors;}})()